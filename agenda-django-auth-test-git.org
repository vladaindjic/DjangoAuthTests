#+title: Django Auth + tests, GitHub Actions, GitFlow
#+author: Vladimir Inđić
#+OPTIONS: toc:nil
#+OPTIONS: date:nil
#+OPTIONS: author:nil

  Današnji termin vežbi namenjen je za upoznavanje sa:
  - Django sistemom za autentifikaciju i autorizaciju
  - Django testovima
  - /GitHub Actions/ alatom za CI/CD
  - /GitFlow/-om

  Kao referentni primer, koristi se [[https://github.com/vladaindjic/DjangoAuthTests][sledeći repozitorijum]].


* Django Auth

  Django radni okvir poseduje ugrađeni [[https://docs.djangoproject.com/en/3.2/topics/auth/][sistem za autentifikaciju i autorizaciju korisnika]].

  U funkciji [[https://github.com/vladaindjic/DjangoAuthTests/blob/aded5a1223dc9496e77f090e6393b6b25f994bcf/prodavnicesajt/prodavnice/management/commands/popuni_bazu.py#L112][~_napravi_korisnike~]] obratiti pažnju na sledeće:
  - dinamičko kreiranje permisija 
  - dinamičko kreiranje grupa
  - dodavanje permisije grupi
  - dodela korisnika grupi 

  U [[https://github.com/vladaindjic/DjangoAuthTests/blob/master/prodavnicesajt/prodavnice/kasa_view.py][~kasa_view.py~]] obratiti pažnju na sledeće:
  - kako se radi login
  - kako se radi logout
  - kako se ograničava pristup pojedinim view funkcijama.

  Takođe obratiti pažnju na sledeće:
  - [[https://github.com/vladaindjic/DjangoAuthTests/blob/master/prodavnicesajt/prodavnice/templates/kase_login.html][kase_login.html /template/]]
  - logout u [[https://github.com/vladaindjic/DjangoAuthTests/blob/master/prodavnicesajt/prodavnice/templates/base.html][base.html /template/-u]]


* Django Testiranje

  Django podržava automatizovano testiranje. Konvencija je da se testovi navode unutar ~tests~ foldera
  i da nazivi modula u kojima se nalaze testovi počinju sa prefiksom ~test~.
  Testovi se pišu unutar klasa koje nasleđuju ~unittest.TestCase~, a navedene su u pomenutim modulima.

** Jedinično testiranje
  
  Primer pisanja jediničnog testa možete pronaći na [[https://docs.djangoproject.com/en/3.2/topics/testing/overview/#writing-tests][linku]].

** Integracioni testovi

   Klasa [[https://github.com/vladaindjic/DjangoAuthTests/blob/master/prodavnicesajt/prodavnice/tests/test_kase_login.py][~KaseLoginTests~]] predstavlja primer skupa integracionih testova.
   Obratiti pažnju na:
   - inicijalizaciju baze za ovaj skup testova (~setUpTestData~)
   - Pripremu [[https://docs.djangoproject.com/en/3.2/topics/testing/tools/#the-test-client][test klijenta]] za svaki test (~setUp~).
   - Slanje zahteva serveru upotrebom pripremljenog klijenta.
   - Provera vrednosti koje server vrati kao odgovor na pomenuti zahtev.

*** Pokretanje ~KaseLoginTests~ skupa testova

   Za pokretanje testova navedenih unutar pomenute klase, izvršiti sledeću komandu:
   #+begin_src
   python manage.py test prodavnice.tests --noinput
   #+end_src

   Obratiti pažnju da parametar [[https://docs.djangoproject.com/en/3.2/topics/testing/overview/#the-test-database][~--noinput~]] dovodi do brisanja sadržaja baze nakon zavšetka testova.


** Pokretanje testova

    Ostale načine za pokretanje automatizovanih testove možete pronaći [[https://docs.djangoproject.com/en/3.2/topics/testing/overview/#running-tests][ovde]].


* GitHub Actions

  [[https://github.com/features/actions][/Github Actions/]] predstavlja jedan od alata koji služe za CI/CD.
  Da biste ga koristili, dovoljno je samo da specificirate /workflow/ unutar ~.github/workflows/~ direktorijuma.
  Datoteka [[https://github.com/vladaindjic/DjangoAuthTests/blob/master/.github/workflows/django.yml][~.github/workflows/django.yml~]] predstavlja jednostavan primer /workflow/-a.
  Više informacije o značenju elemenata /YAML workflow/ datoteke možete pronaći u zvaničnoj [[https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#understanding-the-workflow-file][dokumentaciji]].
  Rezultati svih /workflow/-ova (/build/ planova) dostupni su u [[https://github.com/vladaindjic/DjangoAuthTests/actions][/Actions/ kartici direktorijuma]].

  Informacije o upotrebi CI/CD alata za potrebe ovog projekta možete pronaći [[https://docs.google.com/document/d/1KEHUMj6sIWnKAclZDA-4VQpIFRr7FyN70xAb44i6z2E/edit?usp=sharing][u dokumentu]].
  Posebno obratiti pažnju na pitanja koja se tiču /SCM/-a i /CI/CD/ alata. 

* GitFlow

  Za potrebe projektnog zadatka iz ovog predmeta, git je potrebno koristiti po preporučenom modelu koji se zove [[https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow][/GitFlow/]].
  Više informacija možete pronaći [[https://docs.google.com/document/d/1KEHUMj6sIWnKAclZDA-4VQpIFRr7FyN70xAb44i6z2E/edit?usp=sharing][u sledećem dokumentu]]. Posebno obratiti pažnju na pitanja i odgovore
  koji se tiču upotrebe /git/ alata.

* Upotreba GitHub platforme

  Smernice za upotrebu GitHub platforme tokom izrade projektnog zadatke pogledati [[https://docs.google.com/document/d/1KEHUMj6sIWnKAclZDA-4VQpIFRr7FyN70xAb44i6z2E/edit?usp=sharing][u sledećem dokumentu]].
  Posebno obratiti pažnju na pitanja i odgovore koji se tiču upotrebe /GitHub/ platforme.
